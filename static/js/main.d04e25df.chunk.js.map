{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Navbar/Navbar.tsx","api.ts","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","React","memo","person","selectedSlug","name","sex","to","classNames","PeopleTable","people","isSelected","slug","map","mother","find","parent","motherName","father","fatherName","born","died","PeoplePage","isError","isLoading","useParams","length","HomePage","NotFoundPage","Navbar","role","isActive","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","useState","setPeople","setIsError","setIsLoading","LoadPeople","useCallback","peopleFromServer","useEffect","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d04e25df.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  selectedSlug: string,\n};\n\nexport const PersonLink: FC<Props> = React.memo(({ person, selectedSlug }) => {\n  const { name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${selectedSlug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n});\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string,\n};\n\nexport const PeopleTable: FC<Props> = React.memo(({ people, selectedSlug }) => {\n  const isSelected = (person: Person) => person.slug === selectedSlug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const mother = people\n            .find((parent) => parent.name === person.motherName);\n          const father = people\n            .find((parent) => parent.name === person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames(\n                { 'has-background-warning': isSelected(person) },\n              )}\n            >\n              <td>\n                <PersonLink person={person} selectedSlug={person.slug} />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {mother\n                  ? (<PersonLink person={mother} selectedSlug={mother.slug} />)\n                  : (person.motherName || '-')}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} selectedSlug={father.slug} />\n                  : person.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../../components/PeopleTable/PeopleTable';\n\ntype Props = {\n  people: Person[],\n  isError: boolean,\n  isLoading: boolean,\n};\n\nexport const PeoplePage: React.FC<Props> = React.memo(\n  ({ people, isError, isLoading }) => {\n    const { slug = '' } = useParams();\n\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading\n              ? <Loader />\n              : (\n                <>\n                  {isError && (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      Something went wrong\n                    </p>\n                  )}\n\n                  {!people.length && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                </>\n              )}\n\n            {people.length && (\n              <PeopleTable people={people} selectedSlug={slug} />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  },\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = React.memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { Person } from './types';\nimport { getPeople } from './api';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const LoadPeople = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    LoadPeople();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage\n                    people={people}\n                    isError={isError}\n                    isLoading={isLoading}\n                  />\n                )}\n              />\n              <Route\n                path=\":slug\"\n                element={(\n                  <PeoplePage\n                    people={people}\n                    isError={isError}\n                    isLoading={isLoading}\n                  />\n                )}\n              />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n// import React from 'react';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}